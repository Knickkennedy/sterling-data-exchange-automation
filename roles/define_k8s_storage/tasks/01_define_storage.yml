---
# Provide intelligent storage class selection to minimize required user knowledge

# 1. Lookup storage class availabiity
# -----------------------------------------------------------------------------
- name: Lookup Storage classes
  kubernetes.core.k8s_info:
    #    api_version: storage.k8s.io/v1
    kind: StorageClass
  register: lookup_storageclasses

- name: Create List of Storages
  ansible.builtin.set_fact:
    my_storage_list: "{{ lookup_storageclasses.resources | map(attribute='metadata.name') | list }}"

# 2. Dynamic Provisioning
# -----------------------------------------------------------------------------
- name: Check for Red Hat StorageClass
  ansible.builtin.set_fact:
    file_storage_class: "ocs-storagecluster-cephfs"
  when:
    - file_storage_class == ""
    - "'ocs-storagecluster-cephfs' in my_storage_list"

- name: Check for IBM Cloud StorageClass
  ansible.builtin.set_fact:
    file_storage_class: "ibmc-file-gold"
  when:
    - file_storage_class == ""
    - "'ibmc-file-gold' in my_storage_list"

- name: Check for AWS StorageClass
  ansible.builtin.set_fact:
    file_storage_class: "efs"
  when:
    - file_storage_class == ""
    - "'efs' in my_storage_list"

- name: Check for Azure StorageClass
  ansible.builtin.set_fact:
    file_storage_class: "managed-csi-premium"
  when:
    - file_storage_class == ""
    - "'managed-csi-premium' in my_storage_list"

- name: Check for IBM Techzone StorageClass
  ansible.builtin.set_fact:
    file_storage_class: "managed-nfs-storage"
  when:
    - file_storage_class == ""
    - "'managed-nfs-storage' in my_storage_list"

- name: Check for IBM Spectrum Scale StorageClass
  ansible.builtin.set_fact:
    file_storage_class: "scale-cnsa"
  when:
    - file_storage_class == ""
    - "'scale-cnsa' in my_storage_list"

# 2. Dynamic Provisioning
# -----------------------------------------------------------------------------
- name: Check for Red Hat StorageClass
  ansible.builtin.set_fact:
    block_storage_class: "ocs-storagecluster-ceph-rbd"
  when:
    - block_storage_class == ""
    - "'ocs-storagecluster-ceph-rbd' in my_storage_list"

- name: Check for IBM Cloud StorageClass
  ansible.builtin.set_fact:
    block_storage_class: "ibmc-block-gold"
  when:
    - "'ibmc-block-gold' in my_storage_list"

- name: Check for AWS StorageClass
  ansible.builtin.set_fact:
    block_storage_class: "ebs"
  when:
    - block_storage_class == ""
    - "'ebs' in my_storage_list"

- name: Check for Azure StorageClass
  ansible.builtin.set_fact:
    block_storage_class: "managed-csi-premium"
  when:
    - block_storage_class == ""
    - "'managed-csi-premium' in my_storage_list"

- name: Check for IBM Techzone StorageClass
  ansible.builtin.set_fact:
    block_storage_class: "managed-nfs-storage"
  when:
    - block_storage_class == ""
    - "'managed-nfs-storage' in my_storage_list"

- name: Check for IBM Spectrum Scale StorageClass
  ansible.builtin.set_fact:
    block_storage_class: "scale-cnsa"
  when:
    - block_storage_class == ""
    - "'scale-cnsa' in my_storage_list"

- name: Assert that storage class has been defined
  ansible.builtin.assert:
    that: file_storage_class is defined and file_storage_class != ""
    fail_msg: "file_storage_class must be defined"

- name: Assert that storage class has been defined
  ansible.builtin.assert:
    that: block_storage_class is defined and block_storage_class != ""
    fail_msg: "block_storage_class must be defined"
